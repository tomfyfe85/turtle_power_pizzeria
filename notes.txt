twilio-
twilio was installed with brew


- update diagram with phone_number_validator class 
- ensure twilio auth etc is safe to commit to git
write mock test for Connection class
#confirm with added time module

test phone_number_validator
throw error if phone number is invalid

test order 
mocks
confirm_order sets basket to []

test_intergration
#confirm_order
confirms sent text
confirms valid phone number
sets basket to []

Kay's notes:

More classes:
each class has a single responsibility:

order.py
Order class can be be the God class;
import all classes into Order.
export add_to_basket and view_basket out and
create a new basket class.
(Order could be renamed restaurant?)

menu.py
should just have the menu,
create and add function to add items to the menu

#to create
viewer
a class that any class can use to handle formatting
of it's return data
use __repr__ method?

basket
basket functionality from the order class

phone_number_validator
confirms a valid uk phone number

spit up test_intergration.py contents to 
seperate test files per class, which include
integration test and unit tests. 

- Begin with viwer class
#view 
view list of instances converted to text with 
__repr__ function (do some research into this)

#View_current
returns welcome message with current menu

#view_basket
puts basket data into readable text

#view_checkout
puts checkout data into readable text

-menu
#add 
add menu items
#remove menu items






